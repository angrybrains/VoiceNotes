{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "defaultValue": "voicenote02",
      "type": "String"
    },
    "sites_openaihelper1108_externalid": {
      "defaultValue": "/subscriptions/[subscriptionId]/resourceGroups/Lab-Functions/providers/Microsoft.Web/sites/openaihelper1108",
      "type": "String"
    },
    "connections_onedrive_externalid": {
      "defaultValue": "/subscriptions/[subscriptionId]/resourceGroups/Lab-LogicApp/providers/Microsoft.Web/connections/onedrive",
      "type": "String"
    },
    "connections_azureblob_externalid": {
      "defaultValue": "/subscriptions/[subscriptionId]/resourceGroups/Lab-LogicApp/providers/Microsoft.Web/connections/azureblob",
      "type": "String"
    },
    "connections_keyvault_externalid": {
      "defaultValue": "/subscriptions/[subscription().subscriptionId]/resourceGroups/Lab-LogicApp/providers/Microsoft.Web/connections/keyvault",
      "type": "String"
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "japaneast",
        "japanwest",
        "northcentralus",
        "northeurope",
        "southcentralus",
        "southeastasia",
        "westeurope",
        "westus"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    }
  },
  "variables": {
    "connections_keyvault": "concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/keyvault')",
    "connections_azureblob": "concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/azureblob')",
    "connections_onedrive": "concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/connections/onedrive')",
    "sites_openaihelper": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/openaihelper1108')]"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "staticResults": {
            "Create_blob_(V2)0": {
              "status": "Succeeded",
              "outputs": {
                "headers": {},
                "statusCode": "OK"
              }
            }
          },
          "triggers": {
            "When_a_file_is_created": {
              "recurrence": {
                "frequency": "Second",
                "interval": 30
              },
              "evaluatedRecurrence": {
                "frequency": "Second",
                "interval": 30
              },
              "metadata": {
                "F7D5DDC9627F715!629757": "/VoiceNotes"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['onedrive']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/triggers/onnewfilev2",
                "queries": {
                  "folderId": "{folderId}",
                  "includeSubfolders": true,
                  "inferContentType": true,
                  "simulate": false
                }
              }
            }
          },
          "actions": {
            "Create_blob_(V2)": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()",
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('https://voicenotes1101.blob.core.windows.net'))}/files",
                "queries": {
                  "folderPath": "/source",
                  "name": "@base64ToString(triggerOutputs()['headers']['x-ms-file-name-encoded'])",
                  "queryParametersSingleEncoded": true
                }
              },
              "runtimeConfiguration": {
                "staticResult": {
                  "staticResultOptions": "Disabled",
                  "name": "Create_blob_(V2)0"
                }
              }
            },
            "openaihelper1108-TranscribeAudio": {
              "runAfter": {
                "Get_secret": [
                  "Succeeded"
                ]
              },
              "type": "Function",
              "inputs": {
                "body": {
                  "apiKey": "@body('Get_secret')?['value']",
                  "audio": "@base64(triggerBody())",
                  "name": "@base64ToString(triggerOutputs()['headers']['x-ms-file-name-encoded'])"
                },
                "method": "POST",
                "function": {
                  "id": "[concat(parameters('sites_openaihelper1108_externalid'), '/functions/TranscribeAudio')]"
                }
              }
            },
            "Get_secret": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('OpenAiApiKey')}/value"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "onedrive": {
                "id": "[variables('connections_onedrive')]",
                "connectionId": "[parameters('connections_onedrive_externalid')]",
                "connectionName": "onedrive"
              },
              "azureblob": {
                "id": "[variables('connections_azureblob')]",
                "connectionId": "[parameters('connections_azureblob_externalid')]",
                "connectionName": "azureblob",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              },
              "keyvault": {
                "id": "[variables('connections_keyvault')]",
                "connectionId": "[parameters('connections_keyvault_externalid')]",
                "connectionName": "keyvault"
              }
            }
          }
        }
      }
    }
  ]
}